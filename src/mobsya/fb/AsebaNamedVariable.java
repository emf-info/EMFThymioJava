// automatically generated by the FlatBuffers compiler, do not modify

package mobsya.fb;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class AsebaNamedVariable extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static AsebaNamedVariable getRootAsAsebaNamedVariable(ByteBuffer _bb) { return getRootAsAsebaNamedVariable(_bb, new AsebaNamedVariable()); }
  public static AsebaNamedVariable getRootAsAsebaNamedVariable(ByteBuffer _bb, AsebaNamedVariable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AsebaNamedVariable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int index() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long size() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createAsebaNamedVariable(FlatBufferBuilder builder,
      int index,
      int nameOffset,
      long size) {
    builder.startTable(3);
    AsebaNamedVariable.addSize(builder, size);
    AsebaNamedVariable.addName(builder, nameOffset);
    AsebaNamedVariable.addIndex(builder, index);
    return AsebaNamedVariable.endAsebaNamedVariable(builder);
  }

  public static void startAsebaNamedVariable(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addIndex(FlatBufferBuilder builder, int index) { builder.addShort(0, (short) index, (short) 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addSize(FlatBufferBuilder builder, long size) { builder.addInt(2, (int) size, (int) 0L); }
  public static int endAsebaNamedVariable(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AsebaNamedVariable get(int j) { return get(new AsebaNamedVariable(), j); }
    public AsebaNamedVariable get(AsebaNamedVariable obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

