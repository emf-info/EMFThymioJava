// automatically generated by the FlatBuffers compiler, do not modify

package mobsya.fb;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * The description of an Aseba VM, sent in response to a RequestNodeAsebaVMDescription
 */
@SuppressWarnings("unused")
public final class NodeAsebaVMDescription extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static NodeAsebaVMDescription getRootAsNodeAsebaVMDescription(ByteBuffer _bb) { return getRootAsNodeAsebaVMDescription(_bb, new NodeAsebaVMDescription()); }
  public static NodeAsebaVMDescription getRootAsNodeAsebaVMDescription(ByteBuffer _bb, NodeAsebaVMDescription obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public NodeAsebaVMDescription __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long requestId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public mobsya.fb.NodeId nodeId() { return nodeId(new mobsya.fb.NodeId()); }
  public mobsya.fb.NodeId nodeId(mobsya.fb.NodeId obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long bytecodeSize() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long dataSize() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long stackSize() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public mobsya.fb.AsebaNamedVariable variables(int j) { return variables(new mobsya.fb.AsebaNamedVariable(), j); }
  public mobsya.fb.AsebaNamedVariable variables(mobsya.fb.AsebaNamedVariable obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int variablesLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public mobsya.fb.AsebaNamedVariable.Vector variablesVector() { return variablesVector(new mobsya.fb.AsebaNamedVariable.Vector()); }
  public mobsya.fb.AsebaNamedVariable.Vector variablesVector(mobsya.fb.AsebaNamedVariable.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public mobsya.fb.AsebaEvent events(int j) { return events(new mobsya.fb.AsebaEvent(), j); }
  public mobsya.fb.AsebaEvent events(mobsya.fb.AsebaEvent obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int eventsLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public mobsya.fb.AsebaEvent.Vector eventsVector() { return eventsVector(new mobsya.fb.AsebaEvent.Vector()); }
  public mobsya.fb.AsebaEvent.Vector eventsVector(mobsya.fb.AsebaEvent.Vector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public mobsya.fb.AsebaNativeFunction functions(int j) { return functions(new mobsya.fb.AsebaNativeFunction(), j); }
  public mobsya.fb.AsebaNativeFunction functions(mobsya.fb.AsebaNativeFunction obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int functionsLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public mobsya.fb.AsebaNativeFunction.Vector functionsVector() { return functionsVector(new mobsya.fb.AsebaNativeFunction.Vector()); }
  public mobsya.fb.AsebaNativeFunction.Vector functionsVector(mobsya.fb.AsebaNativeFunction.Vector obj) { int o = __offset(18); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createNodeAsebaVMDescription(FlatBufferBuilder builder,
      long requestId,
      int nodeIdOffset,
      long bytecodeSize,
      long dataSize,
      long stackSize,
      int variablesOffset,
      int eventsOffset,
      int functionsOffset) {
    builder.startTable(8);
    NodeAsebaVMDescription.addFunctions(builder, functionsOffset);
    NodeAsebaVMDescription.addEvents(builder, eventsOffset);
    NodeAsebaVMDescription.addVariables(builder, variablesOffset);
    NodeAsebaVMDescription.addStackSize(builder, stackSize);
    NodeAsebaVMDescription.addDataSize(builder, dataSize);
    NodeAsebaVMDescription.addBytecodeSize(builder, bytecodeSize);
    NodeAsebaVMDescription.addNodeId(builder, nodeIdOffset);
    NodeAsebaVMDescription.addRequestId(builder, requestId);
    return NodeAsebaVMDescription.endNodeAsebaVMDescription(builder);
  }

  public static void startNodeAsebaVMDescription(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addRequestId(FlatBufferBuilder builder, long requestId) { builder.addInt(0, (int) requestId, (int) 0L); }
  public static void addNodeId(FlatBufferBuilder builder, int nodeIdOffset) { builder.addOffset(1, nodeIdOffset, 0); }
  public static void addBytecodeSize(FlatBufferBuilder builder, long bytecodeSize) { builder.addInt(2, (int) bytecodeSize, (int) 0L); }
  public static void addDataSize(FlatBufferBuilder builder, long dataSize) { builder.addInt(3, (int) dataSize, (int) 0L); }
  public static void addStackSize(FlatBufferBuilder builder, long stackSize) { builder.addInt(4, (int) stackSize, (int) 0L); }
  public static void addVariables(FlatBufferBuilder builder, int variablesOffset) { builder.addOffset(5, variablesOffset, 0); }
  public static int createVariablesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startVariablesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addEvents(FlatBufferBuilder builder, int eventsOffset) { builder.addOffset(6, eventsOffset, 0); }
  public static int createEventsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startEventsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addFunctions(FlatBufferBuilder builder, int functionsOffset) { builder.addOffset(7, functionsOffset, 0); }
  public static int createFunctionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFunctionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endNodeAsebaVMDescription(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public NodeAsebaVMDescription get(int j) { return get(new NodeAsebaVMDescription(), j); }
    public NodeAsebaVMDescription get(NodeAsebaVMDescription obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

