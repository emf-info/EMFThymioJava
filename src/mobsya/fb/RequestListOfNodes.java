// automatically generated by the FlatBuffers compiler, do not modify

package mobsya.fb;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Ask the server to send a list of all nodes
 * The server will send back a NodesChanged message containing infos on all nodes
 */
@SuppressWarnings("unused")
public final class RequestListOfNodes extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static RequestListOfNodes getRootAsRequestListOfNodes(ByteBuffer _bb) { return getRootAsRequestListOfNodes(_bb, new RequestListOfNodes()); }
  public static RequestListOfNodes getRootAsRequestListOfNodes(ByteBuffer _bb, RequestListOfNodes obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RequestListOfNodes __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void startRequestListOfNodes(FlatBufferBuilder builder) { builder.startTable(0); }
  public static int endRequestListOfNodes(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RequestListOfNodes get(int j) { return get(new RequestListOfNodes(), j); }
    public RequestListOfNodes get(RequestListOfNodes obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

