// automatically generated by the FlatBuffers compiler, do not modify

package mobsya.fb;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ScratchpadUpdate extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static ScratchpadUpdate getRootAsScratchpadUpdate(ByteBuffer _bb) { return getRootAsScratchpadUpdate(_bb, new ScratchpadUpdate()); }
  public static ScratchpadUpdate getRootAsScratchpadUpdate(ByteBuffer _bb, ScratchpadUpdate obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ScratchpadUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long requestId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public mobsya.fb.NodeId scratchpadId() { return scratchpadId(new mobsya.fb.NodeId()); }
  public mobsya.fb.NodeId scratchpadId(mobsya.fb.NodeId obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public mobsya.fb.NodeId groupId() { return groupId(new mobsya.fb.NodeId()); }
  public mobsya.fb.NodeId groupId(mobsya.fb.NodeId obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public mobsya.fb.NodeId nodeId() { return nodeId(new mobsya.fb.NodeId()); }
  public mobsya.fb.NodeId nodeId(mobsya.fb.NodeId obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int language() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 1; }
  public String text() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public String name() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public boolean deleted() { int o = __offset(18); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createScratchpadUpdate(FlatBufferBuilder builder,
      long requestId,
      int scratchpadIdOffset,
      int groupIdOffset,
      int nodeIdOffset,
      int language,
      int textOffset,
      int nameOffset,
      boolean deleted) {
    builder.startTable(8);
    ScratchpadUpdate.addName(builder, nameOffset);
    ScratchpadUpdate.addText(builder, textOffset);
    ScratchpadUpdate.addLanguage(builder, language);
    ScratchpadUpdate.addNodeId(builder, nodeIdOffset);
    ScratchpadUpdate.addGroupId(builder, groupIdOffset);
    ScratchpadUpdate.addScratchpadId(builder, scratchpadIdOffset);
    ScratchpadUpdate.addRequestId(builder, requestId);
    ScratchpadUpdate.addDeleted(builder, deleted);
    return ScratchpadUpdate.endScratchpadUpdate(builder);
  }

  public static void startScratchpadUpdate(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addRequestId(FlatBufferBuilder builder, long requestId) { builder.addInt(0, (int) requestId, (int) 0L); }
  public static void addScratchpadId(FlatBufferBuilder builder, int scratchpadIdOffset) { builder.addOffset(1, scratchpadIdOffset, 0); }
  public static void addGroupId(FlatBufferBuilder builder, int groupIdOffset) { builder.addOffset(2, groupIdOffset, 0); }
  public static void addNodeId(FlatBufferBuilder builder, int nodeIdOffset) { builder.addOffset(3, nodeIdOffset, 0); }
  public static void addLanguage(FlatBufferBuilder builder, int language) { builder.addInt(4, language, 1); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(5, textOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(6, nameOffset, 0); }
  public static void addDeleted(FlatBufferBuilder builder, boolean deleted) { builder.addBoolean(7, deleted, false); }
  public static int endScratchpadUpdate(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // scratchpad_id
    builder.required(o, 14);  // text
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ScratchpadUpdate get(int j) { return get(new ScratchpadUpdate(), j); }
    public ScratchpadUpdate get(ScratchpadUpdate obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

